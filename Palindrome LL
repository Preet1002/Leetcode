class Solution {
private:
    ListNode* isReverse(ListNode* head){
        ListNode* prev=NULL;
        ListNode* curr=head;
        while(curr!=NULL){
            ListNode* temp=curr->next;
            curr->next=prev;
            prev=curr;
            curr=temp;
        }
        return prev;
    }
public:
    bool isPalindrome(ListNode* head) {
        if(head==NULL || head->next==NULL) return true;
        ListNode* slow= head;
        ListNode* fast= head->next;
        while(fast!=NULL && fast->next!=NULL){
            slow=slow->next;
            fast=fast->next->next;
        }
        ListNode* middle=slow;
        ListNode* head2=middle->next;
        ListNode* temp=isReverse(head2);
        ListNode* first=head;
        while(temp!=NULL){
            if(first->val!=temp->val){
                return false;
            }
            first=first->next;
            temp=temp->next;
        }
        return true;
    }
};
