class Solution {
private:
    ListNode* reverse(ListNode*head){
        ListNode*prev=NULL;
        ListNode*curr=head;
        while(curr!=NULL){
            ListNode* temp=curr->next;
            curr->next=prev;
            prev=curr;
            curr=temp;
        }
        return prev;
    }
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(head==NULL || head->next==NULL) return NULL;
        ListNode* temp=reverse(head);
        ListNode* temp2=temp;
        ListNode* prev=NULL;
        while(n!=1){
            prev=temp;
            temp=temp->next;
            n--;
        }
        if(temp->next==NULL){
            prev->next=NULL;
        }else{
            temp->val=temp->next->val;
            temp->next=temp->next->next;
        }
        ListNode*temp3=reverse(temp2);
        return temp3;
    }
};
